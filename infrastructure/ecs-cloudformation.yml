AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS Fargate deployment for Spring Festivos API - Free Tier'

Parameters:
  Environment:
    Type: String
  VPCId:
    Type: AWS::EC2::VPC::Id
  PrivateSubnetIds:
    Type: CommaDelimitedList
  DBSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
  DBURL:
    Type: String
  DBSecretArn:
    Type: String
    Description: ARN of the secret containing the database password
  AWSRegion:
    Type: String

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub 'festivos-cluster-${Environment}'
      Tags:
        - Key: Project
          Value: FestivosAPI
        - Key: Environment
          Value: !Ref Environment

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'ecsTaskExecutionRole-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Ref DBSecretArn
      Tags:
        - Key: Project
          Value: FestivosAPI

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'ecsTaskRole-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Tags:
        - Key: Project
          Value: FestivosAPI

  APILogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/ecs/festivos-api-${Environment}'
      RetentionInDays: 7

  APISecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: API SG for Festivos API - Free Tier
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          DestinationSecurityGroupId: !Ref DBSecurityGroupId
        # Permitir HTTPS saliente para conectarse a ECR y AWS APIs
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        # Permitir HTTP saliente para metadatos de AWS
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Project
          Value: FestivosAPI
        - Key: Environment
          Value: !Ref Environment

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub 'festivos-api-${Environment}'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: '256'
      Memory: '512'
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
        - Name: festivos-api
          Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/festivos-api-${Environment}:latest'
          Cpu: 256
          Memory: 512
          MemoryReservation: 256
          Essential: true
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          Environment:
            - Name: SPRING_PROFILES_ACTIVE
              Value: aws
            - Name: SERVER_PORT
              Value: '8080'
            - Name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              Value: 'health,info'
            - Name: SPRING_DATASOURCE_URL
              Value: !Ref DBURL
            - Name: SPRING_DATASOURCE_USERNAME
              Value: festivos_user
          Secrets:
            - Name: SPRING_DATASOURCE_PASSWORD
              ValueFrom: !Ref DBSecretArn
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref APILogGroup
              awslogs-region: !Ref AWSRegion
              awslogs-stream-prefix: ecs

  APIService:
    Type: AWS::ECS::Service
    DependsOn:
      - TaskDefinition
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Sub 'festivos-api-service-${Environment}'
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref APISecurityGroup
          Subnets: !Ref PrivateSubnetIds
      Tags:
        - Key: Project
          Value: FestivosAPI
        - Key: Environment
          Value: !Ref Environment

Outputs:
  ECSClusterName:
    Description: ECS Cluster Name
    Value: !Ref ECSCluster
  ServiceName:
    Description: ECS Service Name
    Value: !GetAtt APIService.ServiceName
  RepositoryUri:
    Description: ECR Repository URI
    Value: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/festivos-api-${Environment}'
